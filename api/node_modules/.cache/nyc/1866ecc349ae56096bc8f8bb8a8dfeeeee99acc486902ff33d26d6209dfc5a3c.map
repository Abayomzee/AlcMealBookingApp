{"version":3,"sources":["meal.services.js"],"names":["MealServices","fetchAllMeals","allMeals","dummy","meals","map","newMeal","Meal","id","name","price","size","addMeal","meal","mealLength","length","lastId","newId","push","getMeal","find","deleteMeal","mealIndex","indexOf","removeMeal","splice","updateMeal","mealId","Ameal","getMealIndex"],"mappings":"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","sourceRoot":"c:\\Users\\Abayomi\\Documents\\Programming\\AlcForLoop\\api\\services","sourcesContent":["import dummy from '../utils/dummyData';\r\nimport Meal from '../models/meal.model';\r\n\r\nconst MealServices = {\r\n    fetchAllMeals(){\r\n      const allMeals = dummy.meals.map( (meals) => {\r\n            const newMeal = new Meal();\r\n            newMeal.id = meals.id;\r\n            newMeal.name = meals.name;\r\n            newMeal.price = meals.price;\r\n            newMeal.size = meals.size;\r\n\r\n            return newMeal;\r\n        });\r\n\r\n        return allMeals;\r\n    },\r\n\r\n    addMeal(meal){\r\n        const mealLength = dummy.meals.length;\r\n        const lastId = dummy.meals[mealLength - 1].id;\r\n        const newId = lastId + 1;\r\n\r\n        meal.id = newId;\r\n        dummy.meals.push(meal);\r\n        return meal;\r\n    },\r\n\r\n    getMeal(id){\r\n        const meal = dummy.meals.find((meal) => meal.id == id);\r\n        return meal || {};\r\n    },\r\n\r\n    deleteMeal(id){\r\n        const meal = dummy.meals.find((meal) => meal.id == id);\r\n        const mealIndex = dummy.meals.indexOf(meal);\r\n        const removeMeal = dummy.meals.splice(mealIndex, 1);\r\n        // console.log(removeMeal);\r\n        // console.log(mealIndex);\r\n\r\n        return removeMeal || {};\r\n    },\r\n\r\n    updateMeal(meal, id){\r\n\r\n        // get the meal id and index\r\n        const mealId = dummy.meals.find((Ameal) => Ameal.id == id);\r\n        const getMealIndex = dummy.meals.indexOf(mealId);\r\n        \r\n        mealId.id = id;\r\n\r\n        if(meal.name == null){\r\n            mealId.name = mealId.name;\r\n        } else {\r\n            mealId.name = meal.name;\r\n        }\r\n\r\n        if(meal.size == null){\r\n            mealId.size = mealId.size;\r\n        } else {\r\n            mealId.size = meal.size;\r\n        }\r\n\r\n        if(meal.price == null){\r\n            mealId.price = mealId.price;\r\n        } else {\r\n            mealId.price = meal.price;\r\n        }\r\n\r\n        dummy.meals.splice(getMealIndex, 1, mealId);\r\n\r\n        return mealId;\r\n    }\r\n}\r\n\r\nexport default MealServices;"]}